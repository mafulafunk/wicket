jsintegration:
  title: An example of integration with JavaScript
  jsintegration_1: What we want to do...
  jsintegration_2: ...and how we will do it
  jsintegration_3: Summary
advanced:
  title: Wicket advanced topics
  advanced_1: Enriching components with behaviors
  advanced_2: Generating callback URLs with IRequestListener
  advanced_3: Initializers
  advanced_4: Using JMX with Wicket
  advanced_5: Generating HTML markup from code
  advanced_6: Summary
ajax:
  title: Working with AJAX
  ajax_1: How to use AJAX components and behaviors
  ajax_2: Build-in AJAX components
  ajax_3: Built-in AJAX behaviors
  ajax_4: Using an activity indicator
  ajax_5: AJAX request attributes and call listeners
  ajax_6: Creating custom AJAX call listener
  ajax_7: Summary
jee:
  title: Integration with enterprise containers
  jee_1: Integrating Wicket with EJB
  jee_2: Integrating Wicket with Spring
  jee_3: JSR-330 annotations
  jee_4: Summary
nativewebsockets:
  title: Native WebSockets
  nativewebsockets_1: How does it work ?
  nativewebsockets_2: How to use
  nativewebsockets_3: Client-side APIs
  nativewebsockets_4: Testing
  nativewebsockets_5: Differences with Wicket-Atmosphere module.
  nativewebsockets_6: FAQ
security:
  title: Security with Wicket
  security_1: Authentication
  security_2: Authorizations
  security_3: Using HTTPS protocol
  security_4: URLs encryption in detail 
  security_5: Package Resource Guard
  security_6: Summary
testing:
  title: Test Driven Development with Wicket
  testing_1: Utility class WicketTester
  testing_2: Testing Wicket forms
  testing_3: Testing markup with TagTester
  testing_4: Summary
testingspring:
  title: Test Driven Development with Wicket and Spring
  testingspring_1: Configuration of the runtime environment
  testingspring_2: Configuration of the JUnit based integration test environment
  testingspring_3: Summary
bestpractices:
  title: Wicket Best Practices
  bestpractices_1: Encapsulate components correctly
  bestpractices_2: Put models and page data in fields
  bestpractices_3: Correct naming for Wicket IDs
  bestpractices_4: Avoid changes at the component tree
  bestpractices_5: Implement visibilities of components correctly
  bestpractices_6: Always use models
  bestpractices_7: Do not unwrap models within the constructor hierarchy
  bestpractices_8: Pass models extended components
  bestpractices_9: Validators must not change any data or models
  bestpractices_10: Do not pass components to constructors
  bestpractices_11: Use the Wicket session only for global data
  bestpractices_12: Do not use factories for components
  bestpractices_13: Every page and component must be tested
  bestpractices_14: Avoid interactions with other servlet filters
  bestpractices_15: Cut small classes and methods
  bestpractices_16: The argument "Bad documentation"
  bestpractices_17: Summary
internals:
  title: Wicket Internals
  pagestoring: Page storing
maven:
  title: Working with Maven (Appendix)
  maven_1: Switching Wicket to DEPLOYMENT mode
  maven_2: Creating a Wicket project from scratch and importing it into our favourite IDE
wicketstuff:
  title: Project WicketStuff (Appendix)
  wicketstuff_1: What is project WicketStuff
  wicketstuff_2: Module tinymce
  wicketstuff_3: Module wicketstuff-gmap3
  wicketstuff_4: Module wicketstuff-googlecharts
  wicketstuff_5: Module wicketstuff-inmethod-grid
  wicketstuff_6: Module wicketstuff-rest-annotations
redirects:
  title: Lost In Redirection With Apache Wicket (Appendix)
contributing:
  title: Contributing to this guide (Appendix)
  
